% my $previousHeader = '';
% my $groupPresent = 0;
% my $cfGroupSum = {new => 0, open => 0, stalled => 0};
<table class="queue-summary" width="100%" cellspacing="0" cellpadding="1">
<tr>
	<th class="collection-as-table">
	    <% $Users->Count() %>
%       if ($Groups && ref $Groups eq 'ARRAY') {
            users in <% join(', ', @{ $Groups}) %>
%       } else {
            privileged users
%       }
    </th>
% for my $status (@StatusList) {
	<th class="collection-as-table"><%loc($status)%></th>
% }
	<th class="collection-as-table"><&|/l&>total</&></th>
</tr>
% for my $user(@u) {

%   if ($loadCf && (($user->FirstCustomFieldValue($cfId) && !$previousHeader) || ($previousHeader && $user->FirstCustomFieldValue($cfId) ne $previousHeader))) {
%       if ($groupPresent) {
            <tr class="evenline usersearch-sum-row">
                <td>&nbsp;</td>
%               my $groupRowSum = 0;
%               for my $status (@StatusList) {
                    <td align="right"><a><% $cfGroupSum->{$status} %></a></td>
%                   $groupRowSum += $cfGroupSum->{$status};
%               }
                    <td align="right"><a><% $groupRowSum %></a></td>
            </tr>
%       }
%       $groupPresent = 1;
        <tr>
            <th colspan="5" class="collection-as-table"><% $user->FirstCustomFieldValue($cfId) %></td>
        </tr>
%       $cfGroupSum = {new => 0, open => 0, stalled => 0};
%   }
%   #RT::Logger->debug("UserSearch: Processing user ". $user->Name);
%   $i++;
%   my $baseLink = RT->Config->Get('WebPath'). "/Search/Results.html?Query=Owner='". $user->Name. "'";
	<tr class="<% $i%2 ? 'oddline' : 'evenline' %>">
		<td><a href="<%$baseLink|n%><%$totalCond|n%>"><%$user->Name%></a></td>
%   my $rowsum = 0;
%   for my $status (@StatusList) {
%     if ($data->{$user->Name}->{$status} && $data->{$user->Name}->{$status} > 0) {
%       $cfGroupSum->{$status} += $data->{$user->Name}->{$status};
%       $rowsum += $data->{$user->Name}->{$status};
%     }
		<td align="right">
			<a href="<%$baseLink|n%> and Status='<%$status%>'">
				<% $data->{$user->Name}->{$status} || '-' %>
			</a>
		</td>
%   }
		<td align="right">
			<a href="<%$baseLink|n%><%$totalCond|n%>">
				<% $rowsum > 0 ? $rowsum : '-' %>
			</a>
		</td>
	</tr>
% $previousHeader = $user->FirstCustomFieldValue($cfId);
% }
%# Add the last group sum row
% if ($groupPresent && $previousHeader) {
    <tr class="evenline usersearch-sum-row">
        <td>&nbsp;</td>
%       my $groupRowSum = 0;
%       for my $status (@StatusList) {
            <td align="right"><a><% $cfGroupSum->{$status} %></a></td>
%           $groupRowSum += $cfGroupSum->{$status};
%       }
        <td align="right"><a><% $groupRowSum %></a></td>
     </tr>
% }
</table>
<%init>
    my $loadCf = RT->Config->Get('UserSearch_GroupByCustomField') // '';
    my $cfId = undef;

    $Users->OrderBy(ALIAS => 'main', FIELD => 'Name', ORDER => 'ASC');

    my @u = @{ $Users->ItemsArrayRef };

    if ($loadCf) {
        my $cf = RT::CustomField->new($RT::SystemUser);


        if ($loadCf =~m/\d+/) {
            $cf->Load($loadCf);
        } else {
            $cf->LoadByName(Name => $loadCf, LookupType => 'RT::User');
        }

        unless ($cf->Id) {
            $m->out('Could not load CustomField "' . $loadCf . '"');
            return;
        }

        unless ($cf->LookupType eq 'RT::User') {
            $m->out('CustomField "' . $loadCf . '" is not a RT::User field');
            return;
        }

        unless ($cf->IsSelectionType()) {
            $m->out('CustomField "' . $loadCf . '" is not a SelectionType');
            return;
        }

        if ($cf->Id) {
            my $values = $cf->Values();
            my $valuesOrder = {'' => -999}; # Default (empty) should be the first entry

            $cfId = $cf->Id;

            while (my $value = $values->Next()) {
                $valuesOrder->{$value->Name} = $value->SortOrder;
            }

            @u = sort {
                $valuesOrder->{$a->FirstCustomFieldValue($cfId) // ''} <=> $valuesOrder->{$b->FirstCustomFieldValue($cfId) // ''}
            } @u;

        }
    }

	use RT::Report::Tickets;
	my $report = RT::Report::Tickets->new( RT->SystemUser );


	my $query = join(' OR ',  map { "Owner = ".$_->Id } @u);
	
	my $data = {};
	my $state = {};
	my $i=0;

	$report->SetupGroupings( Query => $query, GroupBy => [qw(Status Owner)] );

	#RT::Logger->debug("UserSearch report results: " . Dumper($report));
	#RT::Logger->debug("UserSearch users: ". join(' ',  map { "Name: ".$_->Name } @u));

	while(my $entry = $report->Next()) {
		#RT::Logger->debug("UserSearch: " . Dumper($entry));
		#$m->out('<pre>' . Dumper($entry). '</pre>');
		$data->{$entry->__Value('col1')}->{$entry->__Value('status')} = $entry->__Value('id');
		$state->{$entry->__Value('Status')} = 1;
	}
	my $totalCond = ' AND ('. join(' OR ', map {"Status='$_'"} @StatusList). ')';

</%init>
<%args>
	$Users => undef
	$Groups => undef
	@StatusList => ()
</%args>
